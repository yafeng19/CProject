#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 1000
int main()
{
	char strText0[N] = {
		"We   have   an   old   musical\n"
		"instrument.It   is   called  a\n"
		"clavichord.It   was   made  in\n"
		"Germany in 1681.Our clavichord\n"
		"is  kept in the living-room.It\n"
		"has belonged to our family for\n"
		"a long time.The instrument was\n"
		"bought  by my grandfather many\n"
		"years   ago.Recently   it  was\n"
		"damaged by a visitor.She tried\n"
		"to  play jazz on it!She struck\n"
		"the  keys  too hardand two of\n"
		"the   strings  were  broken.My\n"
		"father  was shocked.Now we are\n"
		"not allowed to touch it.It is\n"
		"being  repaired by a friend of\n"
		"my father's.\n"
	};
	char strText[N] = {"We have an old musical instrument.It is called a clavichord.It was made in Germany in 1681.Our clavichord is kept in the living-room."
		"It has belonged to our family for a long time.The instrument was bought by my grandfather many years ago."
		"Recently it was damaged by a visitor.She tried to play jazz on it!She struck the keys too hard and two of the strings were broken."
		"My father was shocked.Now we are not allowed to touch it.It is being repaired by a friend of my father's. "};
	char sortstr[200], strALine[200], strOutput[200];
	int  printcolumnsum = 0;
	int numColumn, startChar = 0, endChar, textLen;
	printf("Predisplay the text in 30 columns:\n");
	puts(strText0);
	printf("How many columns in a line?\n");
	scanf_s("%d", &numColumn);
	getchar();
	printf("The result is:\n");
	textLen = strlen(strText);
	if (numColumn >= textLen)
	{
		puts(strText);
		exit(0);
	}
	else
	{
		do {
			endChar = startChar + numColumn - 1;
			int k;
			for (k = 0;k < numColumn;k++)
			{
				strALine[k] = ' ';
			}
			strALine[k] = '\0';
			switch (strText[endChar])
			{
			case ',':
			case '.':
			case '!':
			{
				strncpy_s(strALine, sizeof(strALine), strText + startChar, endChar - startChar + 1);
				startChar = endChar + 1;
				break;
			}
			case ' ':
			{
				strncpy_s(strALine, sizeof(strALine), strText + startChar, endChar - startChar);
				startChar = endChar + 1;
				break;
			}
			default:
			{
				if (strText[endChar + 1] != ' ')
				{
					do
					{
						endChar--;
					} while (strText[endChar] != ',' && strText[endChar] != '.' && strText[endChar] != '!' && strText[endChar] != ' ');
					if (strText[endChar] != ' ')
					{
						strncpy_s(strALine, sizeof(strALine), strText + startChar, endChar - startChar + 1);
						startChar = endChar + 1;
					}
					else
					{
						strncpy_s(strALine, sizeof(strALine), strText + startChar, endChar - startChar);
						startChar = endChar + 1;
					}
				}
				else
				{
					strncpy_s(strALine, sizeof(strALine), strText + startChar, endChar - startChar + 1);
					startChar = endChar + 2;
				}
			}
			}
			int numSubstractLen = 0, numSpace = 0, numlnsert = 0, numlnsert1 = 0;
			int i = 0, j = 0;
			for (k = 0;k < numColumn;k++)
			{
				strOutput[k] = ' ';
			}
			strOutput[k] = '\0';
			for (i = 0; i < strlen(strALine); i++)
			{
				if (strALine[i] == ' ')
					numSpace++;
			}
			numSubstractLen = numColumn - strlen(strALine);
			if (numSpace != 0)
			{
				numlnsert = numSubstractLen / numSpace;//平均每个空格处插入的空格数
				numlnsert1 = numSubstractLen % numSpace;//从第一个原空格处开始，计算需要在多少个原空格处多加一个空格
			}
			else
			{
				numlnsert = 0;
				numlnsert1 = 0;
			}
			for (i = 0, j = 0; i < strlen(strALine); i++)
			{
				if (' ' == strALine[i])
				{
					j = j + numlnsert;
					if (0 < numlnsert1)
					{
						j++;
						numlnsert1--;
					}
				}
				strOutput[j] = strALine[i];
				j++;
			}
			strOutput[j] = '\0';
			puts(strOutput);
			printcolumnsum++;
			if (printcolumnsum > 17)
			{
				break;
			}
		} while (startChar <= textLen);
		getchar();
	}
	return 0;
}